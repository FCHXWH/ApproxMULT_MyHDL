// File: new_op.v
// Generated by MyHDL 0.11
// Date: Tue Jul 27 17:45:40 2021


`timescale 1ns/10ps

module new_op (
    out,
    a,
    b,
    c,
    d
);


output [1:0] out;
reg [1:0] out;
input [0:0] a;
input [0:0] b;
input [0:0] c;
input [0:0] d;

wire [0:0] cout1;
wire [0:0] cout2;
wire [0:0] sum1;
wire [0:0] sum2;
wire [1:0] mux0_0_a;
wire [1:0] mux0_0_b;

assign mux0_0_a[1] = cout1[0];
assign mux0_0_a[0] = sum1[0];
assign mux0_0_b[1] = cout2[0];
assign mux0_0_b[0] = sum2[0];



assign sum1 = ((a ^ b) ^ c);
assign cout1 = (((a & b) | (a & c)) | (b & c));



assign sum2 = ((a ^ b) ^ c);
assign cout2 = (((a & b) | (a & c)) | (b & c));


always @(mux0_0_b, mux0_0_a, d) begin: NEW_OP_MUX0_0_COMB
    if ((d == 1)) begin
        out = mux0_0_a;
    end
    else begin
        out = mux0_0_b;
    end
end

endmodule
